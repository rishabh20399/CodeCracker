//LOGIC: We keep adding the elements --> We keep updating the value of maxSum 
         --> if the sum becomes negative, we drop the subarray and continue with currSum=0 for the next subarray elements

//Time Complexity: O(N)
//Auxiliary Space: O(1)

class Solution {
    public int maxSubArray(int[] nums) {
        int currSum=0;
        int maxSum=Integer.MIN_VALUE;
        int n=nums.length;
        for(int i=0;i<n; i++){
            currSum +=nums[i];
            if(currSum>maxSum) maxSum=currSum;
            if(currSum<0) currSum=0;
        }
        return maxSum;

    }
}
